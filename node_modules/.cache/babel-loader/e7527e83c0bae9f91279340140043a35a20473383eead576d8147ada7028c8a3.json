{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sunny sharma\\\\Desktop\\\\Task 1\\\\json-schema-builder\\\\src\\\\components\\\\SchemaBuilder.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Input, Select, Space, Typography, Switch, Divider } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst defaultFieldValue = type => {\n  switch (type) {\n    case 'string':\n      return '';\n    case 'number':\n    case 'float':\n      return 0;\n    case 'boolean':\n      return false;\n    case 'nested':\n      return [];\n    case 'objectId':\n      return '';\n    default:\n      return '';\n  }\n};\nconst SchemaBuilder = ({\n  onChange,\n  onSubmit\n}) => {\n  _s();\n  const [fields, setFields] = React.useState([{\n    id: crypto.randomUUID(),\n    keyName: 'field1',\n    type: 'string',\n    value: '',\n    enabled: true\n  }]);\n  const buildSchema = fields => {\n    const schema = {};\n    fields.forEach(({\n      keyName,\n      type,\n      value,\n      enabled\n    }) => {\n      if (!enabled) return;\n      if (type === 'nested' && Array.isArray(value)) {\n        schema[keyName] = buildSchema(value);\n      } else {\n        schema[keyName] = value;\n      }\n    });\n    return schema;\n  };\n  React.useEffect(() => {\n    onChange(buildSchema(fields));\n  }, [fields, onChange]);\n  const updateField = (id, key, value, parentId) => {\n    const update = f => {\n      return f.map(field => {\n        if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\n          return {\n            ...field,\n            value: field.value.map(nested => nested.id === id ? {\n              ...nested,\n              [key]: value\n            } : nested)\n          };\n        } else if (field.type === 'nested' && Array.isArray(field.value)) {\n          return {\n            ...field,\n            value: update(field.value)\n          };\n        }\n        return field.id === id ? {\n          ...field,\n          [key]: value\n        } : field;\n      });\n    };\n    if (!parentId) {\n      setFields(prev => prev.map(f => f.id === id ? {\n        ...f,\n        [key]: value\n      } : f));\n    } else {\n      setFields(prev => update(prev));\n    }\n  };\n  const addField = parentId => {\n    const newField = {\n      id: crypto.randomUUID(),\n      keyName: 'newField',\n      type: 'string',\n      value: '',\n      enabled: true\n    };\n    const insert = f => {\n      return f.map(field => {\n        if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\n          return {\n            ...field,\n            value: [...field.value, newField]\n          };\n        } else if (field.type === 'nested' && Array.isArray(field.value)) {\n          return {\n            ...field,\n            value: insert(field.value)\n          };\n        }\n        return field;\n      });\n    };\n    if (!parentId) {\n      setFields(prev => [...prev, newField]);\n    } else {\n      setFields(prev => insert(prev));\n    }\n  };\n  const deleteField = (id, parentId) => {\n    const remove = f => {\n      return f.map(field => {\n        if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\n          return {\n            ...field,\n            value: field.value.filter(v => v.id !== id)\n          };\n        } else if (field.type === 'nested' && Array.isArray(field.value)) {\n          return {\n            ...field,\n            value: remove(field.value)\n          };\n        }\n        return field;\n      });\n    };\n    if (!parentId) {\n      setFields(prev => prev.filter(f => f.id !== id));\n    } else {\n      setFields(prev => remove(prev));\n    }\n  };\n  const renderFields = (fields, parentId) => fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 8,\n      borderLeft: parentId ? '2px solid #ccc' : undefined,\n      paddingLeft: parentId ? 16 : 0,\n      maxWidth: '100%',\n      overflowX: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        display: 'flex',\n        marginBottom: 8,\n        flexWrap: 'wrap'\n      },\n      align: \"start\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Field Name\",\n        value: field.keyName,\n        onChange: e => updateField(field.id, 'keyName', e.target.value, parentId),\n        style: {\n          width: 150\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: field.type,\n        onChange: value => {\n          updateField(field.id, 'type', value, parentId);\n          updateField(field.id, 'value', defaultFieldValue(value), parentId);\n        },\n        style: {\n          width: 140\n        },\n        options: [{\n          label: 'String',\n          value: 'string'\n        }, {\n          label: 'Number',\n          value: 'number'\n        }, {\n          label: 'Float',\n          value: 'float'\n        }, {\n          label: 'Boolean',\n          value: 'boolean'\n        }, {\n          label: 'ObjectId',\n          value: 'objectId'\n        }, {\n          label: 'Nested',\n          value: 'nested'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), field.type !== 'nested' && (field.type === 'boolean' ? /*#__PURE__*/_jsxDEV(Switch, {\n        checked: field.value,\n        onChange: checked => updateField(field.id, 'value', checked, parentId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Value\",\n        value: field.value,\n        onChange: e => {\n          const val = field.type === 'number' || field.type === 'float' ? Number(e.target.value) : e.target.value;\n          updateField(field.id, 'value', val, parentId);\n        },\n        style: {\n          width: 150\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(Switch, {\n        checked: field.enabled,\n        onChange: checked => updateField(field.id, 'enabled', checked, parentId),\n        title: \"Enable/Disable Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"dashed\",\n        onClick: () => addField(field.id),\n        disabled: field.type !== 'nested',\n        icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 19\n        }, this),\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"dashed\",\n        danger: true,\n        onClick: () => deleteField(field.id, parentId),\n        icon: /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), field.type === 'nested' && Array.isArray(field.value) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderFields(field.value, field.id), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"dashed\",\n        onClick: () => addField(field.id),\n        icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this),\n        style: {\n          marginBottom: 8\n        },\n        children: \"+ Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, field.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderFields(fields), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"dashed\",\n      onClick: () => addField(),\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }, this),\n      style: {\n        width: '100%',\n        marginBottom: 16\n      },\n      children: \"+ Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => onSubmit(buildSchema(fields)),\n      style: {\n        width: '100%'\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(SchemaBuilder, \"wvJh7+Of3DtFZWf/X3i/En2vIzE=\");\n_c = SchemaBuilder;\nexport default SchemaBuilder;\nvar _c;\n$RefreshReg$(_c, \"SchemaBuilder\");","map":{"version":3,"names":["React","Button","Input","Select","Space","Typography","Switch","Divider","MinusCircleOutlined","PlusOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","Text","defaultFieldValue","type","SchemaBuilder","onChange","onSubmit","_s","fields","setFields","useState","id","crypto","randomUUID","keyName","value","enabled","buildSchema","schema","forEach","Array","isArray","useEffect","updateField","key","parentId","update","f","map","field","nested","prev","addField","newField","insert","deleteField","remove","filter","v","renderFields","style","marginBottom","borderLeft","undefined","paddingLeft","maxWidth","overflowX","children","display","flexWrap","align","placeholder","e","target","width","fileName","_jsxFileName","lineNumber","columnNumber","options","label","checked","val","Number","title","onClick","disabled","icon","danger","_c","$RefreshReg$"],"sources":["C:/Users/sunny sharma/Desktop/Task 1/json-schema-builder/src/components/SchemaBuilder.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Button, Input, Select, Space, Typography, Switch, Divider } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\ntype FieldType = 'string' | 'number' | 'nested' | 'objectId' | 'float' | 'boolean';\r\n\r\ninterface Field {\r\n  id: string;\r\n  keyName: string;\r\n  type: FieldType;\r\n  value?: string | number | boolean | Field[];\r\n  enabled: boolean;\r\n}\r\n\r\ninterface SchemaBuilderProps {\r\n  onChange: (schema: object) => void;\r\n  onSubmit: (schema: object) => void;\r\n}\r\n\r\nconst defaultFieldValue = (type: FieldType): string | number | boolean | Field[] => {\r\n  switch (type) {\r\n    case 'string':\r\n      return '';\r\n    case 'number':\r\n    case 'float':\r\n      return 0;\r\n    case 'boolean':\r\n      return false;\r\n    case 'nested':\r\n      return [];\r\n    case 'objectId':\r\n      return '';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst SchemaBuilder: React.FC<SchemaBuilderProps> = ({ onChange, onSubmit }) => {\r\n  const [fields, setFields] = React.useState<Field[]>([\r\n    { id: crypto.randomUUID(), keyName: 'field1', type: 'string', value: '', enabled: true },\r\n  ]);\r\n\r\n  const buildSchema = (fields: Field[]): object => {\r\n    const schema: any = {};\r\n    fields.forEach(({ keyName, type, value, enabled }) => {\r\n      if (!enabled) return;\r\n      if (type === 'nested' && Array.isArray(value)) {\r\n        schema[keyName] = buildSchema(value);\r\n      } else {\r\n        schema[keyName] = value;\r\n      }\r\n    });\r\n    return schema;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    onChange(buildSchema(fields));\r\n  }, [fields, onChange]);\r\n\r\n  const updateField = (id: string, key: keyof Field, value: any, parentId?: string) => {\r\n    const update = (f: Field[]): Field[] => {\r\n      return f.map((field) => {\r\n        if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\r\n          return {\r\n            ...field,\r\n            value: (field.value as Field[]).map((nested) =>\r\n              nested.id === id ? { ...nested, [key]: value } : nested\r\n            ),\r\n          };\r\n        } else if (field.type === 'nested' && Array.isArray(field.value)) {\r\n          return { ...field, value: update(field.value) };\r\n        }\r\n        return field.id === id ? { ...field, [key]: value } : field;\r\n      });\r\n    };\r\n\r\n    if (!parentId) {\r\n      setFields((prev) => prev.map((f) => (f.id === id ? { ...f, [key]: value } : f)));\r\n    } else {\r\n      setFields((prev) => update(prev));\r\n    }\r\n  };\r\n\r\n  const addField = (parentId?: string) => {\r\n    const newField: Field = {\r\n      id: crypto.randomUUID(),\r\n      keyName: 'newField',\r\n      type: 'string',\r\n      value: '',\r\n      enabled: true,\r\n    };\r\n\r\n    const insert = (f: Field[]): Field[] => {\r\n      return f.map((field) => {\r\n        if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\r\n          return { ...field, value: [...field.value, newField] };\r\n        } else if (field.type === 'nested' && Array.isArray(field.value)) {\r\n          return { ...field, value: insert(field.value) };\r\n        }\r\n        return field;\r\n      });\r\n    };\r\n\r\n    if (!parentId) {\r\n      setFields((prev) => [...prev, newField]);\r\n    } else {\r\n      setFields((prev) => insert(prev));\r\n    }\r\n  };\r\n\r\n  const deleteField = (id: string, parentId?: string) => {\r\n    const remove = (f: Field[]): Field[] => {\r\n      return f.map((field) => {\r\n        if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\r\n          return { ...field, value: field.value.filter((v) => v.id !== id) };\r\n        } else if (field.type === 'nested' && Array.isArray(field.value)) {\r\n          return { ...field, value: remove(field.value) };\r\n        }\r\n        return field;\r\n      });\r\n    };\r\n\r\n    if (!parentId) {\r\n      setFields((prev) => prev.filter((f) => f.id !== id));\r\n    } else {\r\n      setFields((prev) => remove(prev));\r\n    }\r\n  };\r\n\r\n  const renderFields = (fields: Field[], parentId?: string): React.ReactNode =>\r\n    fields.map((field) => (\r\n      <div\r\n        key={field.id}\r\n        style={{\r\n          marginBottom: 8,\r\n          borderLeft: parentId ? '2px solid #ccc' : undefined,\r\n          paddingLeft: parentId ? 16 : 0,\r\n          maxWidth: '100%',\r\n          overflowX: 'auto',\r\n        }}\r\n      >\r\n        <Space\r\n          style={{ display: 'flex', marginBottom: 8, flexWrap: 'wrap' }}\r\n          align=\"start\"\r\n        >\r\n          <Input\r\n            placeholder=\"Field Name\"\r\n            value={field.keyName}\r\n            onChange={(e) =>\r\n              updateField(field.id, 'keyName', e.target.value, parentId)\r\n            }\r\n            style={{ width: 150 }}\r\n          />\r\n          <Select\r\n            value={field.type}\r\n            onChange={(value: FieldType) => {\r\n              updateField(field.id, 'type', value, parentId);\r\n              updateField(field.id, 'value', defaultFieldValue(value), parentId);\r\n            }}\r\n            style={{ width: 140 }}\r\n            options={[\r\n              { label: 'String', value: 'string' },\r\n              { label: 'Number', value: 'number' },\r\n              { label: 'Float', value: 'float' },\r\n              { label: 'Boolean', value: 'boolean' },\r\n              { label: 'ObjectId', value: 'objectId' },\r\n              { label: 'Nested', value: 'nested' },\r\n            ]}\r\n          />\r\n          {field.type !== 'nested' &&\r\n            (field.type === 'boolean' ? (\r\n              <Switch\r\n                checked={field.value as boolean}\r\n                onChange={(checked) =>\r\n                  updateField(field.id, 'value', checked, parentId)\r\n                }\r\n              />\r\n            ) : (\r\n              <Input\r\n                placeholder=\"Value\"\r\n                value={field.value as string | number}\r\n                onChange={(e) => {\r\n                  const val =\r\n                    field.type === 'number' || field.type === 'float'\r\n                      ? Number(e.target.value)\r\n                      : e.target.value;\r\n                  updateField(field.id, 'value', val, parentId);\r\n                }}\r\n                style={{ width: 150 }}\r\n              />\r\n            ))}\r\n          <Switch\r\n            checked={field.enabled}\r\n            onChange={(checked) =>\r\n              updateField(field.id, 'enabled', checked, parentId)\r\n            }\r\n            title=\"Enable/Disable Field\"\r\n          />\r\n          <Button\r\n            type=\"dashed\"\r\n            onClick={() => addField(field.id)}\r\n            disabled={field.type !== 'nested'}\r\n            icon={<PlusOutlined />}\r\n          >\r\n            Add Item\r\n          </Button>\r\n          <Button\r\n            type=\"dashed\"\r\n            danger\r\n            onClick={() => deleteField(field.id, parentId)}\r\n            icon={<MinusCircleOutlined />}\r\n          />\r\n        </Space>\r\n        {field.type === 'nested' && Array.isArray(field.value) && (\r\n          <>\r\n            {renderFields(field.value, field.id)}\r\n            <Button\r\n              type=\"dashed\"\r\n              onClick={() => addField(field.id)}\r\n              icon={<PlusOutlined />}\r\n              style={{ marginBottom: 8 }}\r\n            >\r\n              + Add Item\r\n            </Button>\r\n            <Divider />\r\n          </>\r\n        )}\r\n      </div>\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      {renderFields(fields)}\r\n      <Button\r\n        type=\"dashed\"\r\n        onClick={() => addField()}\r\n        icon={<PlusOutlined />}\r\n        style={{ width: '100%', marginBottom: 16 }}\r\n      >\r\n        + Add Item\r\n      </Button>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => onSubmit(buildSchema(fields))}\r\n        style={{ width: '100%' }}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchemaBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}