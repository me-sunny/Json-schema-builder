{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sunny sharma\\\\Desktop\\\\Task 1\\\\json-schema-builder\\\\src\\\\components\\\\SchemaBuilder.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Input, Select, Space, Typography, Switch, Divider } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst defaultFieldValue = type => {\n  switch (type) {\n    case 'string':\n      return '';\n    case 'number':\n    case 'float':\n      return 0;\n    case 'boolean':\n      return false;\n    case 'nested':\n      return [];\n    case 'objectId':\n      return '';\n  }\n};\nconst SchemaBuilder = ({\n  onChange,\n  onSubmit\n}) => {\n  _s();\n  const [fields, setFields] = React.useState([{\n    id: crypto.randomUUID(),\n    keyName: 'field1',\n    type: 'string',\n    value: '',\n    enabled: true\n  }]);\n  React.useEffect(() => {\n    const buildSchema = fields => {\n      const schema = {};\n      fields.forEach(({\n        keyName,\n        type,\n        value,\n        enabled\n      }) => {\n        if (!enabled) return;\n        if (type === 'nested' && Array.isArray(value)) {\n          schema[keyName] = buildSchema(value);\n        } else {\n          schema[keyName] = value;\n        }\n      });\n      return schema;\n    };\n    onChange(buildSchema(fields));\n  }, [fields, onChange]);\n  const updateField = (id, key, value) => {\n    setFields(prev => prev.map(field => field.id === id ? {\n      ...field,\n      [key]: value\n    } : field));\n  };\n  const addField = parentId => {\n    const newField = {\n      id: crypto.randomUUID(),\n      keyName: 'newField',\n      type: 'string',\n      value: '',\n      enabled: true\n    };\n    if (!parentId) {\n      setFields(prev => [...prev, newField]);\n    } else {\n      const addNestedField = fields => {\n        return fields.map(field => {\n          if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\n            return {\n              ...field,\n              value: [...field.value, newField]\n            };\n          } else if (field.type === 'nested' && Array.isArray(field.value)) {\n            return {\n              ...field,\n              value: addNestedField(field.value)\n            };\n          }\n          return field;\n        });\n      };\n      setFields(prev => addNestedField(prev));\n    }\n  };\n  const deleteField = (id, parentId) => {\n    if (!parentId) {\n      setFields(prev => prev.filter(field => field.id !== id));\n    } else {\n      const deleteNestedField = fields => {\n        return fields.map(field => {\n          if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\n            return {\n              ...field,\n              value: field.value.filter(f => f.id !== id)\n            };\n          } else if (field.type === 'nested' && Array.isArray(field.value)) {\n            return {\n              ...field,\n              value: deleteNestedField(field.value)\n            };\n          }\n          return field;\n        });\n      };\n      setFields(prev => deleteNestedField(prev));\n    }\n  };\n  const renderFields = (fields, parentId) => {\n    return fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 8,\n        borderLeft: parentId ? '2px solid #ccc' : undefined,\n        paddingLeft: parentId ? 16 : 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Space, {\n        style: {\n          display: 'flex',\n          marginBottom: 8\n        },\n        align: \"start\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Field Name\",\n          value: field.keyName,\n          onChange: e => updateField(field.id, 'keyName', e.target.value),\n          style: {\n            width: 150\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: field.type,\n          onChange: value => {\n            updateField(field.id, 'type', value);\n            updateField(field.id, 'value', defaultFieldValue(value));\n          },\n          style: {\n            width: 140\n          },\n          options: [{\n            label: 'String',\n            value: 'string'\n          }, {\n            label: 'Number',\n            value: 'number'\n          }, {\n            label: 'Float',\n            value: 'float'\n          }, {\n            label: 'Boolean',\n            value: 'boolean'\n          }, {\n            label: 'ObjectId',\n            value: 'objectId'\n          }, {\n            label: 'Nested',\n            value: 'nested'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), field.type !== 'nested' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: field.type === 'boolean' ? /*#__PURE__*/_jsxDEV(Switch, {\n            checked: field.value,\n            onChange: checked => updateField(field.id, 'value', checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Value\",\n            value: field.value,\n            onChange: e => {\n              const val = field.type === 'number' || field.type === 'float' ? Number(e.target.value) : e.target.value;\n              updateField(field.id, 'value', val);\n            },\n            style: {\n              width: 150\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: field.enabled,\n          onChange: checked => updateField(field.id, 'enabled', checked),\n          title: \"Enable/Disable Field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"dashed\",\n          onClick: () => addField(field.id),\n          disabled: field.type !== 'nested',\n          icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this),\n          children: \"Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"dashed\",\n          danger: true,\n          onClick: () => deleteField(field.id, parentId),\n          icon: /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), field.type === 'nested' && Array.isArray(field.value) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [renderFields(field.value, field.id), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"dashed\",\n          onClick: () => addField(field.id),\n          icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this),\n          style: {\n            marginBottom: 8\n          },\n          children: \"+ Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, field.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderFields(fields), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"dashed\",\n      onClick: () => addField(),\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 62\n      }, this),\n      style: {\n        width: '100%',\n        marginBottom: 16\n      },\n      children: \"+ Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => onSubmit(buildSchema(fields)),\n      style: {\n        width: '100%'\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(SchemaBuilder, \"wvJh7+Of3DtFZWf/X3i/En2vIzE=\");\n_c = SchemaBuilder;\nexport default SchemaBuilder;\nvar _c;\n$RefreshReg$(_c, \"SchemaBuilder\");","map":{"version":3,"names":["React","Button","Input","Select","Space","Typography","Switch","Divider","MinusCircleOutlined","PlusOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","Text","defaultFieldValue","type","SchemaBuilder","onChange","onSubmit","_s","fields","setFields","useState","id","crypto","randomUUID","keyName","value","enabled","useEffect","buildSchema","schema","forEach","Array","isArray","updateField","key","prev","map","field","addField","parentId","newField","addNestedField","deleteField","filter","deleteNestedField","f","renderFields","style","marginBottom","borderLeft","undefined","paddingLeft","children","display","align","placeholder","e","target","width","fileName","_jsxFileName","lineNumber","columnNumber","options","label","checked","val","Number","title","onClick","disabled","icon","danger","_c","$RefreshReg$"],"sources":["C:/Users/sunny sharma/Desktop/Task 1/json-schema-builder/src/components/SchemaBuilder.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Button, Input, Select, Space, Typography, Switch, Divider } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\ntype FieldType = 'string' | 'number' | 'nested' | 'objectId' | 'float' | 'boolean';\r\n\r\ninterface Field {\r\n  id: string;\r\n  keyName: string;\r\n  type: FieldType;\r\n  value?: string | number | boolean | Field[];\r\n  enabled: boolean;\r\n}\r\n\r\ninterface SchemaBuilderProps {\r\n  onChange: (schema: object) => void;\r\n  onSubmit: (schema: object) => void;\r\n}\r\n\r\nconst defaultFieldValue = (type: FieldType): string | number | boolean | Field[] => {\r\n  switch (type) {\r\n    case 'string':\r\n      return '';\r\n    case 'number':\r\n    case 'float':\r\n      return 0;\r\n    case 'boolean':\r\n      return false;\r\n    case 'nested':\r\n      return [];\r\n    case 'objectId':\r\n      return '';\r\n  }\r\n};\r\n\r\nconst SchemaBuilder: React.FC<SchemaBuilderProps> = ({ onChange, onSubmit }) => {\r\n  const [fields, setFields] = React.useState<Field[]>([\r\n    { id: crypto.randomUUID(), keyName: 'field1', type: 'string', value: '', enabled: true },\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    const buildSchema = (fields: Field[]): object => {\r\n      const schema: any = {};\r\n      fields.forEach(({ keyName, type, value, enabled }) => {\r\n        if (!enabled) return;\r\n        if (type === 'nested' && Array.isArray(value)) {\r\n          schema[keyName] = buildSchema(value);\r\n        } else {\r\n          schema[keyName] = value;\r\n        }\r\n      });\r\n      return schema;\r\n    };\r\n    onChange(buildSchema(fields));\r\n  }, [fields, onChange]);\r\n\r\n  const updateField = (id: string, key: keyof Field, value: any) => {\r\n    setFields((prev) =>\r\n      prev.map((field) =>\r\n        field.id === id ? { ...field, [key]: value } : field\r\n      )\r\n    );\r\n  };\r\n\r\n  const addField = (parentId?: string) => {\r\n    const newField: Field = {\r\n      id: crypto.randomUUID(),\r\n      keyName: 'newField',\r\n      type: 'string',\r\n      value: '',\r\n      enabled: true,\r\n    };\r\n    if (!parentId) {\r\n      setFields((prev) => [...prev, newField]);\r\n    } else {\r\n      const addNestedField = (fields: Field[]): Field[] => {\r\n        return fields.map((field) => {\r\n          if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\r\n            return { ...field, value: [...field.value, newField] };\r\n          } else if (field.type === 'nested' && Array.isArray(field.value)) {\r\n            return { ...field, value: addNestedField(field.value) };\r\n          }\r\n          return field;\r\n        });\r\n      };\r\n      setFields((prev) => addNestedField(prev));\r\n    }\r\n  };\r\n\r\n  const deleteField = (id: string, parentId?: string) => {\r\n    if (!parentId) {\r\n      setFields((prev) => prev.filter((field) => field.id !== id));\r\n    } else {\r\n      const deleteNestedField = (fields: Field[]): Field[] => {\r\n        return fields.map((field) => {\r\n          if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\r\n            return { ...field, value: field.value.filter((f) => f.id !== id) };\r\n          } else if (field.type === 'nested' && Array.isArray(field.value)) {\r\n            return { ...field, value: deleteNestedField(field.value) };\r\n          }\r\n          return field;\r\n        });\r\n      };\r\n      setFields((prev) => deleteNestedField(prev));\r\n    }\r\n  };\r\n\r\n  const renderFields = (fields: Field[], parentId?: string) => {\r\n    return fields.map((field) => (\r\n      <div key={field.id} style={{ marginBottom: 8, borderLeft: parentId ? '2px solid #ccc' : undefined, paddingLeft: parentId ? 16 : 0 }}>\r\n        <Space style={{ display: 'flex', marginBottom: 8 }} align=\"start\">\r\n          <Input\r\n            placeholder=\"Field Name\"\r\n            value={field.keyName}\r\n            onChange={(e) => updateField(field.id, 'keyName', e.target.value)}\r\n            style={{ width: 150 }}\r\n          />\r\n          <Select\r\n            value={field.type}\r\n            onChange={(value) => {\r\n              updateField(field.id, 'type', value);\r\n              updateField(field.id, 'value', defaultFieldValue(value));\r\n            }}\r\n            style={{ width: 140 }}\r\n            options={[\r\n              { label: 'String', value: 'string' },\r\n              { label: 'Number', value: 'number' },\r\n              { label: 'Float', value: 'float' },\r\n              { label: 'Boolean', value: 'boolean' },\r\n              { label: 'ObjectId', value: 'objectId' },\r\n              { label: 'Nested', value: 'nested' },\r\n            ]}\r\n          />\r\n          {field.type !== 'nested' && (\r\n            <>\r\n              {field.type === 'boolean' ? (\r\n                <Switch\r\n                  checked={field.value as boolean}\r\n                  onChange={(checked) => updateField(field.id, 'value', checked)}\r\n                />\r\n              ) : (\r\n                <Input\r\n                  placeholder=\"Value\"\r\n                  value={field.value as string | number}\r\n                  onChange={(e) => {\r\n                    const val = field.type === 'number' || field.type === 'float' ? Number(e.target.value) : e.target.value;\r\n                    updateField(field.id, 'value', val);\r\n                  }}\r\n                  style={{ width: 150 }}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n          <Switch\r\n            checked={field.enabled}\r\n            onChange={(checked) => updateField(field.id, 'enabled', checked)}\r\n            title=\"Enable/Disable Field\"\r\n          />\r\n          <Button\r\n            type=\"dashed\"\r\n            onClick={() => addField(field.id)}\r\n            disabled={field.type !== 'nested'}\r\n            icon={<PlusOutlined />}\r\n          >\r\n            Add Item\r\n          </Button>\r\n          <Button\r\n            type=\"dashed\"\r\n            danger\r\n            onClick={() => deleteField(field.id, parentId)}\r\n            icon={<MinusCircleOutlined />}\r\n          />\r\n        </Space>\r\n        {field.type === 'nested' && Array.isArray(field.value) && (\r\n          <>\r\n            {renderFields(field.value, field.id)}\r\n            <Button\r\n              type=\"dashed\"\r\n              onClick={() => addField(field.id)}\r\n              icon={<PlusOutlined />}\r\n              style={{ marginBottom: 8 }}\r\n            >\r\n              + Add Item\r\n            </Button>\r\n            <Divider />\r\n          </>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {renderFields(fields)}\r\n      <Button type=\"dashed\" onClick={() => addField()} icon={<PlusOutlined />} style={{ width: '100%', marginBottom: 16 }}>\r\n        + Add Item\r\n      </Button>\r\n      <Button type=\"primary\" onClick={() => onSubmit(buildSchema(fields))} style={{ width: '100%' }}>\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchemaBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}