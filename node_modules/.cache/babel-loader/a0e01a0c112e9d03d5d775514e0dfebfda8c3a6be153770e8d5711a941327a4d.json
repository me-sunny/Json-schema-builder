{"ast":null,"code":"import React from'react';import{Button,Input,Select,Space,Typography,Switch,Divider}from'antd';import{MinusCircleOutlined,PlusOutlined}from'@ant-design/icons';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const{Text}=Typography;const defaultFieldValue=type=>{switch(type){case'string':return'';case'number':case'float':return 0;case'boolean':return false;case'nested':return[];case'objectId':return'';default:return'';}};const SchemaBuilder=_ref=>{let{onChange,onSubmit}=_ref;const[fields,setFields]=React.useState([{id:crypto.randomUUID(),keyName:'field1',type:'string',value:'',enabled:true}]);const buildSchema=fields=>{const schema={};fields.forEach(_ref2=>{let{keyName,type,value,enabled}=_ref2;if(!enabled)return;if(type==='nested'&&Array.isArray(value)){schema[keyName]=buildSchema(value);}else{schema[keyName]=value;}});return schema;};React.useEffect(()=>{onChange(buildSchema(fields));},[fields,onChange]);const updateField=(id,key,value,parentId)=>{const update=f=>{return f.map(field=>{if(field.id===parentId&&field.type==='nested'&&Array.isArray(field.value)){return{...field,value:field.value.map(nested=>nested.id===id?{...nested,[key]:value}:nested)};}else if(field.type==='nested'&&Array.isArray(field.value)){return{...field,value:update(field.value)};}return field.id===id?{...field,[key]:value}:field;});};if(!parentId){setFields(prev=>prev.map(f=>f.id===id?{...f,[key]:value}:f));}else{setFields(prev=>update(prev));}};const addField=parentId=>{const newField={id:crypto.randomUUID(),keyName:'newField',type:'string',value:'',enabled:true};const insert=f=>{return f.map(field=>{if(field.id===parentId&&field.type==='nested'&&Array.isArray(field.value)){return{...field,value:[...field.value,newField]};}else if(field.type==='nested'&&Array.isArray(field.value)){return{...field,value:insert(field.value)};}return field;});};if(!parentId){setFields(prev=>[...prev,newField]);}else{setFields(prev=>insert(prev));}};const deleteField=(id,parentId)=>{const remove=f=>{return f.map(field=>{if(field.id===parentId&&field.type==='nested'&&Array.isArray(field.value)){return{...field,value:field.value.filter(v=>v.id!==id)};}else if(field.type==='nested'&&Array.isArray(field.value)){return{...field,value:remove(field.value)};}return field;});};if(!parentId){setFields(prev=>prev.filter(f=>f.id!==id));}else{setFields(prev=>remove(prev));}};const renderFields=(fields,parentId)=>fields.map(field=>/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:8,borderLeft:parentId?'2px solid #ccc':undefined,paddingLeft:parentId?16:0,maxWidth:'100%',overflowX:'auto'},children:[/*#__PURE__*/_jsxs(Space,{style:{display:'flex',marginBottom:8,flexWrap:'wrap'},align:\"start\",children:[/*#__PURE__*/_jsx(Input,{placeholder:\"Field Name\",value:field.keyName,onChange:e=>updateField(field.id,'keyName',e.target.value,parentId),style:{width:150}}),/*#__PURE__*/_jsx(Select,{value:field.type,onChange:value=>{updateField(field.id,'type',value,parentId);updateField(field.id,'value',defaultFieldValue(value),parentId);},style:{width:140},options:[{label:'String',value:'string'},{label:'Number',value:'number'},{label:'Float',value:'float'},{label:'Boolean',value:'boolean'},{label:'ObjectId',value:'objectId'},{label:'Nested',value:'nested'}]}),field.type!=='nested'&&(field.type==='boolean'?/*#__PURE__*/_jsx(Switch,{checked:field.value,onChange:checked=>updateField(field.id,'value',checked,parentId)}):/*#__PURE__*/_jsx(Input,{placeholder:\"Value\",value:field.value,onChange:e=>{const val=field.type==='number'||field.type==='float'?Number(e.target.value):e.target.value;updateField(field.id,'value',val,parentId);},style:{width:150}})),/*#__PURE__*/_jsx(Switch,{checked:field.enabled,onChange:checked=>updateField(field.id,'enabled',checked,parentId),title:\"Enable/Disable Field\"}),/*#__PURE__*/_jsx(Button,{type:\"dashed\",onClick:()=>addField(field.id),disabled:field.type!=='nested',icon:/*#__PURE__*/_jsx(PlusOutlined,{}),children:\"Add Item\"}),/*#__PURE__*/_jsx(Button,{type:\"dashed\",danger:true,onClick:()=>deleteField(field.id,parentId),icon:/*#__PURE__*/_jsx(MinusCircleOutlined,{})})]}),field.type==='nested'&&Array.isArray(field.value)&&/*#__PURE__*/_jsxs(_Fragment,{children:[renderFields(field.value,field.id),/*#__PURE__*/_jsx(Button,{type:\"dashed\",onClick:()=>addField(field.id),icon:/*#__PURE__*/_jsx(PlusOutlined,{}),style:{marginBottom:8},children:\"+ Add Item\"}),/*#__PURE__*/_jsx(Divider,{})]})]},field.id));return/*#__PURE__*/_jsxs(\"div\",{children:[renderFields(fields),/*#__PURE__*/_jsx(Button,{type:\"dashed\",onClick:()=>addField(),icon:/*#__PURE__*/_jsx(PlusOutlined,{}),style:{width:'100%',marginBottom:16},children:\"Add Item\"}),/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>onSubmit(buildSchema(fields)),style:{width:'100%'},children:\"Submit\"})]});};export default SchemaBuilder;","map":{"version":3,"names":["React","Button","Input","Select","Space","Typography","Switch","Divider","MinusCircleOutlined","PlusOutlined","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Text","defaultFieldValue","type","SchemaBuilder","_ref","onChange","onSubmit","fields","setFields","useState","id","crypto","randomUUID","keyName","value","enabled","buildSchema","schema","forEach","_ref2","Array","isArray","useEffect","updateField","key","parentId","update","f","map","field","nested","prev","addField","newField","insert","deleteField","remove","filter","v","renderFields","style","marginBottom","borderLeft","undefined","paddingLeft","maxWidth","overflowX","children","display","flexWrap","align","placeholder","e","target","width","options","label","checked","val","Number","title","onClick","disabled","icon","danger"],"sources":["C:/Users/sunny sharma/Desktop/Task 1/json-schema-builder/src/components/SchemaBuilder.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Button, Input, Select, Space, Typography, Switch, Divider } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\ntype FieldType = 'string' | 'number' | 'nested' | 'objectId' | 'float' | 'boolean';\r\n\r\ninterface Field {\r\n  id: string;\r\n  keyName: string;\r\n  type: FieldType;\r\n  value?: string | number | boolean | Field[];\r\n  enabled: boolean;\r\n}\r\n\r\ninterface SchemaBuilderProps {\r\n  onChange: (schema: object) => void;\r\n  onSubmit: (schema: object) => void;\r\n}\r\n\r\nconst defaultFieldValue = (type: FieldType): string | number | boolean | Field[] => {\r\n  switch (type) {\r\n    case 'string':\r\n      return '';\r\n    case 'number':\r\n    case 'float':\r\n      return 0;\r\n    case 'boolean':\r\n      return false;\r\n    case 'nested':\r\n      return [];\r\n    case 'objectId':\r\n      return '';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst SchemaBuilder: React.FC<SchemaBuilderProps> = ({ onChange, onSubmit }) => {\r\n  const [fields, setFields] = React.useState<Field[]>([\r\n    { id: crypto.randomUUID(), keyName: 'field1', type: 'string', value: '', enabled: true },\r\n  ]);\r\n\r\n  const buildSchema = (fields: Field[]): object => {\r\n    const schema: any = {};\r\n    fields.forEach(({ keyName, type, value, enabled }) => {\r\n      if (!enabled) return;\r\n      if (type === 'nested' && Array.isArray(value)) {\r\n        schema[keyName] = buildSchema(value);\r\n      } else {\r\n        schema[keyName] = value;\r\n      }\r\n    });\r\n    return schema;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    onChange(buildSchema(fields));\r\n  }, [fields, onChange]);\r\n\r\n  const updateField = (id: string, key: keyof Field, value: any, parentId?: string) => {\r\n    const update = (f: Field[]): Field[] => {\r\n      return f.map((field) => {\r\n        if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\r\n          return {\r\n            ...field,\r\n            value: (field.value as Field[]).map((nested) =>\r\n              nested.id === id ? { ...nested, [key]: value } : nested\r\n            ),\r\n          };\r\n        } else if (field.type === 'nested' && Array.isArray(field.value)) {\r\n          return { ...field, value: update(field.value) };\r\n        }\r\n        return field.id === id ? { ...field, [key]: value } : field;\r\n      });\r\n    };\r\n\r\n    if (!parentId) {\r\n      setFields((prev) => prev.map((f) => (f.id === id ? { ...f, [key]: value } : f)));\r\n    } else {\r\n      setFields((prev) => update(prev));\r\n    }\r\n  };\r\n\r\n  const addField = (parentId?: string) => {\r\n    const newField: Field = {\r\n      id: crypto.randomUUID(),\r\n      keyName: 'newField',\r\n      type: 'string',\r\n      value: '',\r\n      enabled: true,\r\n    };\r\n\r\n    const insert = (f: Field[]): Field[] => {\r\n      return f.map((field) => {\r\n        if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\r\n          return { ...field, value: [...field.value, newField] };\r\n        } else if (field.type === 'nested' && Array.isArray(field.value)) {\r\n          return { ...field, value: insert(field.value) };\r\n        }\r\n        return field;\r\n      });\r\n    };\r\n\r\n    if (!parentId) {\r\n      setFields((prev) => [...prev, newField]);\r\n    } else {\r\n      setFields((prev) => insert(prev));\r\n    }\r\n  };\r\n\r\n  const deleteField = (id: string, parentId?: string) => {\r\n    const remove = (f: Field[]): Field[] => {\r\n      return f.map((field) => {\r\n        if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\r\n          return { ...field, value: field.value.filter((v) => v.id !== id) };\r\n        } else if (field.type === 'nested' && Array.isArray(field.value)) {\r\n          return { ...field, value: remove(field.value) };\r\n        }\r\n        return field;\r\n      });\r\n    };\r\n\r\n    if (!parentId) {\r\n      setFields((prev) => prev.filter((f) => f.id !== id));\r\n    } else {\r\n      setFields((prev) => remove(prev));\r\n    }\r\n  };\r\n\r\n  const renderFields = (fields: Field[], parentId?: string): React.ReactNode =>\r\n    fields.map((field) => (\r\n      <div\r\n        key={field.id}\r\n        style={{\r\n          marginBottom: 8,\r\n          borderLeft: parentId ? '2px solid #ccc' : undefined,\r\n          paddingLeft: parentId ? 16 : 0,\r\n          maxWidth: '100%',\r\n          overflowX: 'auto',\r\n        }}\r\n      >\r\n        <Space\r\n          style={{ display: 'flex', marginBottom: 8, flexWrap: 'wrap' }}\r\n          align=\"start\"\r\n        >\r\n          <Input\r\n            placeholder=\"Field Name\"\r\n            value={field.keyName}\r\n            onChange={(e) =>\r\n              updateField(field.id, 'keyName', e.target.value, parentId)\r\n            }\r\n            style={{ width: 150 }}\r\n          />\r\n          <Select\r\n            value={field.type}\r\n            onChange={(value: FieldType) => {\r\n              updateField(field.id, 'type', value, parentId);\r\n              updateField(field.id, 'value', defaultFieldValue(value), parentId);\r\n            }}\r\n            style={{ width: 140 }}\r\n            options={[\r\n              { label: 'String', value: 'string' },\r\n              { label: 'Number', value: 'number' },\r\n              { label: 'Float', value: 'float' },\r\n              { label: 'Boolean', value: 'boolean' },\r\n              { label: 'ObjectId', value: 'objectId' },\r\n              { label: 'Nested', value: 'nested' },\r\n            ]}\r\n          />\r\n          {field.type !== 'nested' &&\r\n            (field.type === 'boolean' ? (\r\n              <Switch\r\n                checked={field.value as boolean}\r\n                onChange={(checked) =>\r\n                  updateField(field.id, 'value', checked, parentId)\r\n                }\r\n              />\r\n            ) : (\r\n              <Input\r\n                placeholder=\"Value\"\r\n                value={field.value as string | number}\r\n                onChange={(e) => {\r\n                  const val =\r\n                    field.type === 'number' || field.type === 'float'\r\n                      ? Number(e.target.value)\r\n                      : e.target.value;\r\n                  updateField(field.id, 'value', val, parentId);\r\n                }}\r\n                style={{ width: 150 }}\r\n              />\r\n            ))}\r\n          <Switch\r\n            checked={field.enabled}\r\n            onChange={(checked) =>\r\n              updateField(field.id, 'enabled', checked, parentId)\r\n            }\r\n            title=\"Enable/Disable Field\"\r\n          />\r\n          <Button\r\n            type=\"dashed\"\r\n            onClick={() => addField(field.id)}\r\n            disabled={field.type !== 'nested'}\r\n            icon={<PlusOutlined />}\r\n          >\r\n            Add Item\r\n          </Button>\r\n          <Button\r\n            type=\"dashed\"\r\n            danger\r\n            onClick={() => deleteField(field.id, parentId)}\r\n            icon={<MinusCircleOutlined />}\r\n          />\r\n        </Space>\r\n        {field.type === 'nested' && Array.isArray(field.value) && (\r\n          <>\r\n            {renderFields(field.value, field.id)}\r\n            <Button\r\n              type=\"dashed\"\r\n              onClick={() => addField(field.id)}\r\n              icon={<PlusOutlined />}\r\n              style={{ marginBottom: 8 }}\r\n            >\r\n              + Add Item\r\n            </Button>\r\n            <Divider />\r\n          </>\r\n        )}\r\n      </div>\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      {renderFields(fields)}\r\n      <Button\r\n        type=\"dashed\"\r\n        onClick={() => addField()}\r\n        icon={<PlusOutlined />}\r\n        style={{ width: '100%', marginBottom: 16 }}\r\n      >\r\n         Add Item\r\n      </Button>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => onSubmit(buildSchema(fields))}\r\n        style={{ width: '100%' }}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchemaBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}