{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sunny sharma\\\\Desktop\\\\Task 1\\\\json-schema-builder\\\\src\\\\components\\\\SchemaBuilder.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Input, Select, Space, Typography } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst defaultFieldValue = type => {\n  switch (type) {\n    case 'string':\n      return '';\n    case 'number':\n      return 0;\n    case 'nested':\n      return [];\n  }\n};\nconst SchemaBuilder = ({\n  onChange\n}) => {\n  _s();\n  const [fields, setFields] = React.useState([{\n    id: crypto.randomUUID(),\n    keyName: 'field1',\n    type: 'string',\n    value: ''\n  }]);\n  React.useEffect(() => {\n    const buildSchema = fields => {\n      const schema = {};\n      fields.forEach(({\n        keyName,\n        type,\n        value\n      }) => {\n        if (type === 'nested' && Array.isArray(value)) {\n          schema[keyName] = buildSchema(value);\n        } else {\n          schema[keyName] = value;\n        }\n      });\n      return schema;\n    };\n    onChange(buildSchema(fields));\n  }, [fields, onChange]);\n  const updateField = (id, key, value) => {\n    setFields(prev => prev.map(field => field.id === id ? {\n      ...field,\n      [key]: value\n    } : field));\n  };\n  const addField = parentId => {\n    const newField = {\n      id: crypto.randomUUID(),\n      keyName: 'newField',\n      type: 'string',\n      value: ''\n    };\n    if (!parentId) {\n      setFields(prev => [...prev, newField]);\n    } else {\n      const addNestedField = fields => {\n        return fields.map(field => {\n          if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\n            return {\n              ...field,\n              value: [...field.value, newField]\n            };\n          } else if (field.type === 'nested' && Array.isArray(field.value)) {\n            return {\n              ...field,\n              value: addNestedField(field.value)\n            };\n          }\n          return field;\n        });\n      };\n      setFields(prev => addNestedField(prev));\n    }\n  };\n  const deleteField = (id, parentId) => {\n    if (!parentId) {\n      setFields(prev => prev.filter(field => field.id !== id));\n    } else {\n      const deleteNestedField = fields => {\n        return fields.map(field => {\n          if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\n            return {\n              ...field,\n              value: field.value.filter(f => f.id !== id)\n            };\n          } else if (field.type === 'nested' && Array.isArray(field.value)) {\n            return {\n              ...field,\n              value: deleteNestedField(field.value)\n            };\n          }\n          return field;\n        });\n      };\n      setFields(prev => deleteNestedField(prev));\n    }\n  };\n  const renderFields = (fields, parentId) => {\n    return fields.map(field => /*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        display: 'flex',\n        marginBottom: 8\n      },\n      align: \"start\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Field Name\",\n        value: field.keyName,\n        onChange: e => updateField(field.id, 'keyName', e.target.value),\n        style: {\n          width: 150\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: field.type,\n        onChange: value => {\n          updateField(field.id, 'type', value);\n          updateField(field.id, 'value', defaultFieldValue(value));\n        },\n        style: {\n          width: 120\n        },\n        options: [{\n          label: 'String',\n          value: 'string'\n        }, {\n          label: 'Number',\n          value: 'number'\n        }, {\n          label: 'Nested',\n          value: 'nested'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), field.type !== 'nested' && /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Value\",\n        value: field.value,\n        onChange: e => {\n          const val = field.type === 'number' ? Number(e.target.value) : e.target.value;\n          updateField(field.id, 'value', val);\n        },\n        style: {\n          width: 150\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"dashed\",\n        onClick: () => addField(field.id),\n        disabled: field.type !== 'nested',\n        icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this),\n        children: \"Add Nested\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"dashed\",\n        danger: true,\n        onClick: () => deleteField(field.id, parentId),\n        icon: /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, field.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderFields(fields), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"dashed\",\n      onClick: () => addField(),\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 62\n      }, this),\n      style: {\n        width: '100%'\n      },\n      children: \"Add Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(SchemaBuilder, \"bdUQln2N8VjgUXQJo/YLGDWOAgE=\");\n_c = SchemaBuilder;\nexport default SchemaBuilder;\nvar _c;\n$RefreshReg$(_c, \"SchemaBuilder\");","map":{"version":3,"names":["React","Button","Input","Select","Space","Typography","MinusCircleOutlined","PlusOutlined","jsxDEV","_jsxDEV","Text","defaultFieldValue","type","SchemaBuilder","onChange","_s","fields","setFields","useState","id","crypto","randomUUID","keyName","value","useEffect","buildSchema","schema","forEach","Array","isArray","updateField","key","prev","map","field","addField","parentId","newField","addNestedField","deleteField","filter","deleteNestedField","f","renderFields","style","display","marginBottom","align","children","placeholder","e","target","width","fileName","_jsxFileName","lineNumber","columnNumber","options","label","val","Number","onClick","disabled","icon","danger","_c","$RefreshReg$"],"sources":["C:/Users/sunny sharma/Desktop/Task 1/json-schema-builder/src/components/SchemaBuilder.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Button, Input, Select, Space, Typography } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\ntype FieldType = 'string' | 'number' | 'nested';\r\n\r\ninterface Field {\r\n  id: string;\r\n  keyName: string;\r\n  type: FieldType;\r\n  value?: string | number | Field[];\r\n}\r\n\r\ninterface SchemaBuilderProps {\r\n  onChange: (schema: object) => void;\r\n}\r\n\r\nconst defaultFieldValue = (type: FieldType): string | number | Field[] => {\r\n  switch (type) {\r\n    case 'string':\r\n      return '';\r\n    case 'number':\r\n      return 0;\r\n    case 'nested':\r\n      return [];\r\n  }\r\n};\r\n\r\nconst SchemaBuilder: React.FC<SchemaBuilderProps> = ({ onChange }) => {\r\n  const [fields, setFields] = React.useState<Field[]>([\r\n    { id: crypto.randomUUID(), keyName: 'field1', type: 'string', value: '' },\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    const buildSchema = (fields: Field[]): object => {\r\n      const schema: any = {};\r\n      fields.forEach(({ keyName, type, value }) => {\r\n        if (type === 'nested' && Array.isArray(value)) {\r\n          schema[keyName] = buildSchema(value);\r\n        } else {\r\n          schema[keyName] = value;\r\n        }\r\n      });\r\n      return schema;\r\n    };\r\n    onChange(buildSchema(fields));\r\n  }, [fields, onChange]);\r\n\r\n  const updateField = (id: string, key: keyof Field, value: any) => {\r\n    setFields((prev) =>\r\n      prev.map((field) =>\r\n        field.id === id ? { ...field, [key]: value } : field\r\n      )\r\n    );\r\n  };\r\n\r\n  const addField = (parentId?: string) => {\r\n    const newField: Field = {\r\n      id: crypto.randomUUID(),\r\n      keyName: 'newField',\r\n      type: 'string',\r\n      value: '',\r\n    };\r\n    if (!parentId) {\r\n      setFields((prev) => [...prev, newField]);\r\n    } else {\r\n      const addNestedField = (fields: Field[]): Field[] => {\r\n        return fields.map((field) => {\r\n          if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\r\n            return { ...field, value: [...field.value, newField] };\r\n          } else if (field.type === 'nested' && Array.isArray(field.value)) {\r\n            return { ...field, value: addNestedField(field.value) };\r\n          }\r\n          return field;\r\n        });\r\n      };\r\n      setFields((prev) => addNestedField(prev));\r\n    }\r\n  };\r\n\r\n  const deleteField = (id: string, parentId?: string) => {\r\n    if (!parentId) {\r\n      setFields((prev) => prev.filter((field) => field.id !== id));\r\n    } else {\r\n      const deleteNestedField = (fields: Field[]): Field[] => {\r\n        return fields.map((field) => {\r\n          if (field.id === parentId && field.type === 'nested' && Array.isArray(field.value)) {\r\n            return { ...field, value: field.value.filter((f) => f.id !== id) };\r\n          } else if (field.type === 'nested' && Array.isArray(field.value)) {\r\n            return { ...field, value: deleteNestedField(field.value) };\r\n          }\r\n          return field;\r\n        });\r\n      };\r\n      setFields((prev) => deleteNestedField(prev));\r\n    }\r\n  };\r\n\r\n  const renderFields = (fields: Field[], parentId?: string) => {\r\n    return fields.map((field) => (\r\n      <Space key={field.id} style={{ display: 'flex', marginBottom: 8 }} align=\"start\">\r\n        <Input\r\n          placeholder=\"Field Name\"\r\n          value={field.keyName}\r\n          onChange={(e) => updateField(field.id, 'keyName', e.target.value)}\r\n          style={{ width: 150 }}\r\n        />\r\n        <Select\r\n          value={field.type}\r\n          onChange={(value) => {\r\n            updateField(field.id, 'type', value);\r\n            updateField(field.id, 'value', defaultFieldValue(value));\r\n          }}\r\n          style={{ width: 120 }}\r\n          options={[\r\n            { label: 'String', value: 'string' },\r\n            { label: 'Number', value: 'number' },\r\n            { label: 'Nested', value: 'nested' },\r\n          ]}\r\n        />\r\n        {field.type !== 'nested' && (\r\n          <Input\r\n            placeholder=\"Value\"\r\n            value={field.value as string | number}\r\n            onChange={(e) => {\r\n              const val = field.type === 'number' ? Number(e.target.value) : e.target.value;\r\n              updateField(field.id, 'value', val);\r\n            }}\r\n            style={{ width: 150 }}\r\n          />\r\n        )}\r\n        <Button\r\n          type=\"dashed\"\r\n          onClick={() => addField(field.id)}\r\n          disabled={field.type !== 'nested'}\r\n          icon={<PlusOutlined />}\r\n        >\r\n          Add Nested\r\n        </Button>\r\n        <Button\r\n          type=\"dashed\"\r\n          danger\r\n          onClick={() => deleteField(field.id, parentId)}\r\n          icon={<MinusCircleOutlined />}\r\n        />\r\n      </Space>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {renderFields(fields)}\r\n      <Button type=\"dashed\" onClick={() => addField()} icon={<PlusOutlined />} style={{ width: '100%' }}>\r\n        Add Field\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchemaBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}